cmake_minimum_required(VERSION 2.8)

project(cvpr_course)
set(CMAKE_BUILD_TYPE Relese)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED True)

MESSAGE(STATUS "This is BINARY dir " ${cvpr_course_BINARY_DIR})
MESSAGE(STATUS "This is SOURCE dir " ${cvpr_course_SOURCE_DIR})

FIND_PACKAGE(OpenCV REQUIRED)
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})

#FIND_PACKAGE(Eigen3 REQUIRED)
#INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})

FIND_PACKAGE(FMT REQUIRED)
INCLUDE_DIRECTORIES(${FMT_INCLUDE_DIRS})

#FIND_PACKAGE(OpenMP REQUIRED)
#if(OPENMP_FOUND)
#message("OPENMP FOUND")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
#set(CMAKE_EXE_LINKER_FLAGS"${CMAKE_EXE_LINKER_FLAGS}${OpenMP_EXE_LINKER_FLAGS}")
#endif()
#FIND_PACKAGE(Glog REQUIRED)
#INCLUDE_DIRECTORIES(${GLOG_INCLUDE_DIRS})

set(SRC_PATH src/calib)
set(INC_PATH inc)
ADD_SUBDIRECTORY(${SRC_PATH})

#ADD_LIBRARY(cvpr SHARED ${LIBCVPR_SRC})
INCLUDE_DIRECTORIES(${INC_PATH})
add_executable(camera_calib ${SRC_PATH}/run_calib.cc ${SRC_PATH}/calib.cc)
target_link_libraries(camera_calib ${OpenCV_LIBS} glog fmt::fmt)
